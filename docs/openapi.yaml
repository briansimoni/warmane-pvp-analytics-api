openapi: 3.0.0
info:
  title: Warmane Analytics API
  description: This API provides the interface into the data to find out how much of a dog a player might be
  version: 1.0.0
paths:
  /character/profile:
    get:
      summary: Get warmane profile data
      description: |
        This is effectively just a passthrough to warmane.com's JSON API. It seems to have
        pretty strict rate limits on it, so it may not always be reliable. Generally you should
        use the `stats` endpoint instead of this one, but the `online` property is interesting and
        only available here.
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: realm
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved profile from warmane.com
          content:
            application/json:
              schema:
                type: object
                properties:
                  online:
                    type: boolean
                    description: whether the user is currently online or not
                  class:
                    type: string
                    enum:
                      [
                        Druid,
                        Hunter,
                        Mage,
                        Paladin,
                        Priest,
                        Rogue,
                        Shaman,
                        Warlock,
                        Warrior,
                      ]
                  race:
                    type: string
                    enum:
                      [
                        Dwarf,
                        "Night Elf",
                        Gnome,
                        Human,
                        Orc,
                        Undead,
                        Tauren,
                        BloodElf,
                        Draenei,
                      ]
                  gender:
                    type: string
                    enum: [Male, Female]
                  talents:
                    type: array
                    items:
                      type: object
                      properties:
                        tree:
                          type: string
                        points:
                          type: array
                          items:
                            type: number
                  professions:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        item:
                          type: string
                        transmog:
                          type: string
                  equipment:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        item:
                          type: string
                        transmog:
                          type: string

  /character:
    get:
      summary: Query Warmane character metadata
      description: |
        Scans Dynamo for character metadata entries. It does not check warmane.com
        This endpoint could be useful for building suggestions into a search box
        as someone starts typing out a character name

      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved character metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - name
                    - realm
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    total_games_played:
                      type: number

  /character/{id}:
    get:
      summary: Get character metadata
      description: |
        A useful endpoint to quickly determine if a character exists. It will check warmane.com to see if they exist and additionally write/update an entry to Dynamo.
        It will return a 404 if the character is not found on Warmane. In the future this endpoint may return additional data.
      parameters:
        - name: id
          in: path
          required: true
          example: Dumpster@Blackrock
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved character metadata
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - realm
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  total_games_played:
                    type: number

  /character/stats:
    get:
      summary: Get character stats
      description: |
        proxies a call to warmane to get character statistics. Note that these statistics follow the character for as long as it exists.
        In other words, when the season resets the stats do not change. Use this endpoint if you are trying to show off life time arena games played
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: realm
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  Arenas won:
                    type: number
                  Arenas played:
                    type: number
                  5v5 matches:
                    type: number
                  5v5 victories:
                    type: number
                  3v3 matches:
                    type: number
                  2v2 matches:
                    type: number
                  2v2 victories:
                    type: number
                  Circle of Blood matches:
                    type: number
                  Dalaran Sewers matches:
                    type: number
                  Ring of Trials victories:
                    type: number
                  Ring of Valor matches:
                    type: number
                  Ruins of Lordaeron matches:
                    type: number
                  Ruins of Lordaeron victories:
                    type: number
                  Highest 5 man personal rating:
                    type: number
                  Highest 3 man personal rating:
                    type: number
                  Highest 2 man personal rating:
                    type: number
                  Highest 3 man team rating:
                    type: number
                  Highest 2 man team rating:
                    type: number
  /character/crawl-state:
    get:
      summary: Get the crawler state
      description: |
        The crawler is highly constrained on how frequent it can be run. Clients will need
        to know when the last time it ran is, and when it is finished so it can know when
        to start downloading match history
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: realm
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved character data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [pending, running, idle, errored]
                  crawler_last_finished:
                    type: string
                    description: ISO 8601 string indicating when the crawler last stopped
                  crawler_last_started:
                    type: string
                    description: ISO 8601 string indicating when the crawler last started

  /character/matches:
    get:
      summary: Get games played
      description:
        Get an object that contains an array of matches. If a continuation token is present,
        this indicates that there are still more results to be fetched.
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: realm
          in: query
          required: true
          schema:
            type: string
        - name: continuation_token
          in: query
          schema:
            type: string
          description: opaque string that tells the backend where to continue loading database data
      responses:
        200:
          description: TBD. It will probably be an object that contains two properties, matches array, and continuation token if there is one
          content:
            application/json:
              schema:
                type: object
                properties:
                  continuation_token:
                    type: string
                  matches:
                    type: array
                    items:
                      type: object
                      properties:
                        team_name:
                          type: string
                        date:
                          type: string
                        bracket:
                          type: string
                        arena:
                          type: string
                        points_change:
                          type: string
                        character_details:
                          type: array
                          items:
                            type: object
                            properties:
                              matchmaking_change:
                                type: string
                              healingDone:
                                type: string
                              race:
                                type: string
                              killingBlows:
                                type: string
                              teamnamerich:
                                type: string
                              realm:
                                type: string
                              damageDone:
                                type: string
                              charname:
                                type: string
                              class:
                                type: string
                              deaths:
                                type: string
                              personal_change:
                                type: string
                              teamname:
                                type: string

  /crawl:
    post:
      summary: Start crawl
      description: Initiates a crawl of Warmane character data based on the user search parameters provided.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                realm:
                  type: string
              required:
                - name
                - realm
              additionalProperties: false
      responses:
        204:
          description: Crawl started successfully
